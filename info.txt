API = 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


# Telegram Bot –¥–ª—è Custos AI: –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ

## **1. –û–±–∑–æ—Ä**
**–¶–µ–ª—å:** –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã Custos AI —á–µ—Ä–µ–∑ Telegram-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π:
- –°–æ–∑–¥–∞–≤–∞—Ç—å —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤ –ø–æ –ø–æ—Ä—Ç—Ä–µ—Ç—É.
- –ü—Ä–æ–≤–æ–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é –ø–æ –≥–∏–ø–æ—Ç–µ–∑–∞–º.
- –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≥–∏–ø–æ—Ç–µ–∑–∞–º –∏ –±–∞–π—Å—ã.
- –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è Pivot/Persevere.

**–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
- –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è "—Ç—Ä—É–¥–Ω—ã—Ö" —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤.
- –ü–æ–¥-–∞–≥–µ–Ω—Ç—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ bias.
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å LLM (GigaChat/DeepSeek).
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.

---

## **2. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–æ—Ç–∞**
### **2.1 –ú–æ–¥—É–ª–∏**
```python
üìÅ Bot_Core/
‚îú‚îÄ‚îÄ üìÑ main.py              # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞)
‚îú‚îÄ‚îÄ üìÅ responders/          # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ generator.py     # –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è LLM + –≤–∞–ª–∏–¥–∞—Ü–∏—è
‚îú‚îÄ‚îÄ üìÅ validation/          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ –æ—Ç–≤–µ—Ç–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ validator.py     # –õ–æ–≥–∏–∫–∞ Validator-–∞–≥–µ–Ω—Ç–∞
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ bias_hunter.py   # –î–µ—Ç–µ–∫—Ü–∏—è bias
‚îú‚îÄ‚îÄ üìÅ analytics/           # –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ nlp_processor.py # –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è (KeyBERT)
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ reporter.py      # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
‚îú‚îÄ‚îÄ üìÅ data/                # –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ sessions.db      # SQLite —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é
‚îî‚îÄ‚îÄ üìÅ utils/               # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    ‚îî‚îÄ‚îÄ üìÑ plotter.py       # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è (Plotly)

–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏:

python-telegram-bot (v20+) ‚Äî –æ—Å–Ω–æ–≤–∞ –±–æ—Ç–∞.

gigachat, deepseek ‚Äî API –¥–ª—è LLM.

keybert, sentence-transformers ‚Äî NLP-–∞–Ω–∞–ª–∏–∑.

plotly ‚Äî –≥—Ä–∞—Ñ–∏–∫–∏ –≤ HTML.

sqlite3 ‚Äî –ª–æ–∫–∞–ª—å–Ω–∞—è –ë–î.

–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:

–•–æ—Å—Ç–∏–Ω–≥ –Ω–∞ VPS (PythonAnywhere/AWS EC2).

Webhook –¥–ª—è Telegram.

3. –î–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
3.1 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤
–õ–æ–≥–∏–∫–∞ (responders/generator.py):

python
Copy
async def generate_responder(age: int, profession: str, trait: str) -> dict:
    prompt = f"""
    –¢—ã ‚Äî {age}-–ª–µ—Ç–Ω–∏–π {profession}. –¢–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä: {trait} (—Å–∫–µ–ø—Ç–∏–∫/–±–æ–ª—Ç–ª–∏–≤—ã–π/–Ω–µ–¥–æ–≤–µ—Ä—á–∏–≤—ã–π).
    –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π JSON-–ø—Ä–æ—Ñ–∏–ª—å:
    - "name": —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏–º—è,
    - "pain_points": 3 –∫–ª—é—á–µ–≤—ã–µ –±–æ–ª–∏,
    - "communication_style": 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è,
    - "traps": –∫–∞–∫ –∏–∑–±–µ–≥–∞—Ç—å –æ—Ç–≤–µ—Ç–æ–≤ (—Å–ø–∏—Å–æ–∫).
    –ü—Ä–∏–º–µ—Ä –¥–ª—è –±–æ–ª—Ç–ª–∏–≤–æ–≥–æ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞:
    "traps": ["–£—Ö–æ–¥–∏—Ç—å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞", "–°–ø—Ä–∞—à–∏–≤–∞—Ç—å '–ê –≤—ã –∫–∞–∫ –¥—É–º–∞–µ—Ç–µ?'"]
    """
    response = await gigachat_api(prompt)
    return validate_profile(response)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Validator
–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ LLM:

json
Copy
{
  "name": "–û–ª–µ–≥ –ü–µ—Ç—Ä–æ–≤",
  "pain_points": ["–†—É—á–Ω–æ–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö", "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏"],
  "communication_style": "–ó–∞–¥–∞–µ—Ç –≤—Å—Ç—Ä–µ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–µ—Ä–µ–±–∏–≤–∞–µ—Ç, 30% –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏.",
  "traps": ["–°—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–ø—ã—Ç 90-—Ö", "–ì–æ–≤–æ—Ä–∏—Ç: '–ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ —Å–∞–º–∏ —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?'"]
}
3.2 –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π (validation/validator.py)
–ê–ª–≥–æ—Ä–∏—Ç–º:

–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∞–∂ vs –≤–æ–∑—Ä–∞—Å—Ç).

–ê–Ω–∞–ª–∏–∑ pain_points –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ (Figma –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ ‚Üí –æ—à–∏–±–∫–∞).

–°—Ä–∞–≤–Ω–µ–Ω–∏–µ communication_style —Å –∑–∞–¥–∞–Ω–Ω—ã–º trait.

–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

python
Copy
def validate_profile(profile: dict) -> dict:
    errors = []
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤–æ–∑—Ä–∞—Å—Ç vs —Å—Ç–∞–∂
    if "—Å—Ç–∞–∂" in profile:
        if profile["–≤–æ–∑—Ä–∞—Å—Ç"] - profile["—Å—Ç–∞–∂"] < 18:
            errors.append("–ù–µ–≤–æ–∑–º–æ–∂–Ω—ã–π —Å—Ç–∞–∂ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    if profile["profession"] == "–±—É—Ö–≥–∞–ª—Ç–µ—Ä":
        if "Figma" in profile["tools"]:
            errors.append("Figma –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞–º–∏")
    return {"profile": profile, "errors": errors}
3.3 –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é
Flow –±–æ—Ç–∞:

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –≥–∏–ø–æ—Ç–µ–∑—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start_interview.

–ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞ (–∫–Ω–æ–ø–∫–∏: "–°–∫–µ–ø—Ç–∏–∫", "–ë–æ–ª—Ç–ª–∏–≤—ã–π").

–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å ‚Üí –≤—ã–≤–æ–¥–∏—Ç—Å—è –∫—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞.

–ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–∫—Å—Ç–æ–º.

–ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –æ—Ç –ª–∏—Ü–∞ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞, –ø—Ä–∏–º–µ–Ω—è—è "traps".

–ü—Ä–∏–º–µ—Ä –¥–∏–∞–ª–æ–≥–∞:

Copy
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ö–∞–∫ –≤—ã –≤–µ–¥–µ—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—á–µ—Ç?
–ë–æ—Ç (–û–ª–µ–≥ –ü–µ—Ç—Ä–æ–≤): –ù—É, –∑–Ω–∞–µ—Ç–µ, –≤ 90-–µ –º—ã –≤—Å–µ —Å—á–∏—Ç–∞–ª–∏ –Ω–∞ –±—É–º–∞–∂–∫–∞—Ö... 
–ê –≤—ã –≤–æ–æ–±—â–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç? –í–æ—Ç –Ω–µ–¥–∞–≤–Ω–æ...
3.4 –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–æ–≤ (analytics/reporter.py)
–≠—Ç–∞–ø—ã:

–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ KeyBERT –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–º.

–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –≥–∏–ø–æ—Ç–µ–∑–æ–π: –ü–æ–¥—Å—á–µ—Ç % —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤.

–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞:

–ì—Ä–∞—Ñ–∏–∫ "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≥–∏–ø–æ—Ç–µ–∑—ã".

–¶–∏—Ç–∞—Ç—ã-–∏–Ω—Å–∞–π—Ç—ã.

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ Pivot/Persevere.

–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:

python
Copy
def generate_report(answers: list, hypothesis: str) -> str:
    keywords = extract_keywords(hypothesis)  # ["–≤—Ä–µ–º—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"]
    confirmed = sum([1 for ans in answers if any(kw in ans for kw in keywords)])
    return f"""
    üìä –ì–∏–ø–æ—Ç–µ–∑–∞: "{hypothesis}"
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {confirmed}/{len(answers)} —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤.
    –ò–Ω—Å–∞–π—Ç—ã:
    - "–ú–Ω–µ –ø—Ä–æ—â–µ 3 —Ä–∞–∑–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á–µ–º –¥–æ–≤–µ—Ä–∏—Ç—å –º–∞—à–∏–Ω–µ" (–û–ª–µ–≥ –ü–µ—Ç—Ä–æ–≤).
    –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: Pivot ‚Üí —Ñ–æ–∫—É—Å –Ω–∞ —Å–Ω–∏–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫, –∞ –Ω–µ –≤—Ä–µ–º–µ–Ω–∏.
    """

–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞
4.1 –ö–æ–º–∞–Ω–¥—ã
/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è.

/new_responder ‚Äî —Å–æ–∑–¥–∞—Ç—å —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞.

/start_interview ‚Äî –Ω–∞—á–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é.

/analysis ‚Äî –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç.

4.2 Inline-–∫–Ω–æ–ø–∫–∏
python
Copy
from telegram import InlineKeyboardButton

keyboard = [
    [InlineKeyboardButton("–°–∫–µ–ø—Ç–∏–∫", callback_data='trait_skeptic'),
     InlineKeyboardButton("–ë–æ–ª—Ç–ª–∏–≤—ã–π", callback_data='trait_chatty')],
    [InlineKeyboardButton("–ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞", callback_data='demo_question')]
]
4.3 –°–æ—Å—Ç–æ—è–Ω–∏—è (ConversationHandler)
python
Copy
states = {
    INTERVIEW: [MessageHandler(filters.TEXT, handle_interview)],
    HYPOTHESIS_INPUT: [MessageHandler(filters.TEXT, set_hypothesis)]
}
5. –°—Ü–µ–Ω–∞—Ä–∏–π –¥–µ–º–æ –¥–ª—è –∂—é—Ä–∏
–¶–µ–ª—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞ 2 –º–∏–Ω—É—Ç—ã.

–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞:
`/new_responder ‚Üí "–ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å, —Å–∫–µ–ø—Ç–∏–∫" ‚Üí –≤—ã–≤–æ–¥ –ø—Ä–æ—Ñ–∏–ª—è —Å "traps".

–ò–Ω—Ç–µ—Ä–≤—å—é:

–í–æ–ø—Ä–æ—Å: "–ö–∞–∫ –≤—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏?" ‚Üí –æ—Ç–≤–µ—Ç —Å —É—Ö–æ–¥–æ–º –æ—Ç —Ç–µ–º—ã.

–í–æ–ø—Ä–æ—Å: "–ö–∞–∫–∏–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç?" ‚Üí –≤—ã—è–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–π –±–æ–ª–∏.

–ê–Ω–∞–ª–∏–∑:

/analysis ‚Üí –≥—Ä–∞—Ñ–∏–∫ + —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è Pivot.

BiasHunter:

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: "–û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–µ—Ä–µ–∫–æ—Å –≤ –æ—Ç–≤–µ—Ç–∞—Ö –º—É–∂—á–∏–Ω 40+".

6. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
–î–ª—è —Ö–∞–∫–∞—Ç–æ–Ω–∞ (MVP):

–õ–æ–∫–∞–ª—å–Ω–∞—è –ë–î SQLite –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π.

–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã "—Ç—Ä—É–¥–Ω—ã—Ö" —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤.

–ü–æ—Å–ª–µ —Ö–∞–∫–∞—Ç–æ–Ω–∞:

–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM (Hubspot, Salesforce).

–ì–æ–ª–æ—Å–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã —á–µ—Ä–µ–∑ TTS (Silero).

–≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤ –≤ PDF.




–ò—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ –∞–ø–∏ —ç—Ç—É —Å—Ö–µ–º—É
import requests
import json

response = requests.post(
  url="https://openrouter.ai/api/v1/chat/completions",
  headers={
    "Authorization": "Bearer <OPENROUTER_API_KEY>",
    "Content-Type": "application/json",
    "HTTP-Referer": "<YOUR_SITE_URL>", # Optional. Site URL for rankings on openrouter.ai.
    "X-Title": "<YOUR_SITE_NAME>", # Optional. Site title for rankings on openrouter.ai.
  },
  data=json.dumps({
    "model": "deepseek/deepseek-r1-zero:free",
    "messages": [
      {
        "role": "user",
        "content": "What is the meaning of life?"
      }
    ],
    
  })
)